version: 2.1

jobs:
  build-and-test:
    docker:
      - image: cimg/openjdk:11.0
    steps:
      - checkout
      - run:
          name: Build
          command: mvn clean package
#      - run:
#          name: Test
#          command: mvn test
      - run:
          command: |
            echo $(circleci tests glob "test/java/br/sp/fatec/api/dw/DwApplicationTests.java" "test/java/br/sp/fatec/api/dw/servicos/*.java")
            circleci tests glob "test/java/br/sp/fatec/api/dw/DwApplicationTests.java" "test/java/br/sp/fatec/api/dw/servicos/*.java" | xargs -n 1 echo

  integration-test:
    docker:
      - image: cimg/openjdk:11.0
    steps:
      - run:
          command: |
            echo $(circleci tests glob "test/java/br/sp/fatec/api/dw/integracaoTestes/clientesLivres/*.java" "test/java/br/sp/fatec/api/dw/integracaoTestes/minhaCarteira/*.java")
            circleci tests glob "test/java/br/sp/fatec/api/dw/integracaoTestes/clientesLivres/*.java" "test/java/br/sp/fatec/api/dw/integracaoTestes/minhaCarteira/*.java" | xargs -n 1 echo

  build-deploy:
    machine: true
    steps:
      - checkout
      - run:
          name: Build and push Docker image to Heroku
          command: |
            set -x
            sudo curl https://cli-assets.heroku.com/install.sh | sh
            HEROKU_API_KEY=${HEROKU_API_KEY} heroku container:login
            HEROKU_API_KEY=${HEROKU_API_KEY} heroku container:push -a datawarriors-back web
            HEROKU_API_KEY=${HEROKU_API_KEY} heroku container:release -a datawarriors-back web

workflows:
  build-test: 
    jobs:
      - build-and-test:
          filters:
                  branches:
                    ignore: main
  build-deploy:
    jobs:
      - build-deploy:
          filters:
                branches:
                  only: main
  integration-test:
    jobs:
      - integration-test:
          filters:
            branches:
              only: feature/SPC-46
